class Solution {
public:
    int ans = 0;
    
    vector<int> t;
    
    void permute(vector<int>& v, int start, int end)
    {
        if(start == v.size())
        {
            // for(int i = 0; i < v.size(); i++)
            // {
            //     cout << v[i] << " ";
            // }
            // cout << endl;
            ans++;
            return;
        }
        
        for(int i = start; i <= end; i++)
        {
            swap(v[i], v[start]);
            
            // if(v == t)
            // {
            //     cout << start + 1 << " " << v[start] << " " << i + 1 << " " << v[i] << endl;
            // }
            
            if((v[start] % (start + 1) == 0 || (start + 1) % v[start] == 0) 
               // && (v[i] % (i + 1) == 0 || (i + 1) % v[i] == 0)
               )
            {
                permute(v, start + 1, end);
            }
            swap(v[i], v[start]);
        }
    }
    
    int countArrangement(int n) {
        vector<int> v;
        for(int i = 1; i <= n; i++)
        {
            v.push_back(i);
        }
        
        t.push_back(3);
        t.push_back(1);
        t.push_back(6);
        t.push_back(4);
        t.push_back(5);
        t.push_back(2);
        
        permute(v, 0, n - 1);
        
        return ans;
    }
};

// class Solution {
// public:
//     int ans = 0;
    
//     void find(vector<int>& v, int left, int right)
//     {
//         if(left == v.size())
//             ans++;
        
//         for(int i = left; i <= right; i++)
//         {
//             int temp = v[left];
//             v[left] = v[i];
//             v[i] = temp;
//             if(v[left] % (left + 1) == 0 || (left + 1) % v[left] == 0)
//                 find(v, left + 1, right);
//             temp = v[left];
//             v[left] = v[i];
//             v[i] = temp;
//         }
//     }
    
//     int countArrangement(int N) {
//         vector<int> v(N);
//         for(int i = 0; i < N; i++)
//             v[i] = i + 1;
//         find(v, 0, N - 1);
//         return ans;
//     }
// };